// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagementTracketAPI.DbContexts;

namespace ProjectManagementTracketAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContexts))]
    [Migration("20221123145006_Add_Assigning_Task_Table_Modified")]
    partial class Add_Assigning_Task_Table_Modified
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectManagementTracketAPI.Models.AssigningTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Deliverbles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaskEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaskStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssigningTask");
                });

            modelBuilder.Entity("ProjectManagementTracketAPI.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("AllocationPercentage")
                        .HasColumnType("smallint");

                    b.Property<string>("CurrentProfileDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("ExperienceInYear")
                        .HasColumnType("smallint");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ProjectManagementTracketAPI.Models.SkillsMaster", b =>
                {
                    b.Property<short>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("SkillsMaster");
                });

            modelBuilder.Entity("ProjectManagementTracketAPI.Models.SkillsTransaction", b =>
                {
                    b.Property<short>("SkillId")
                        .HasColumnType("smallint");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("SkillId", "MemberId");

                    b.ToTable("SkillsTransaction");
                });

            modelBuilder.Entity("ProjectManagementTracketAPI.Models.SkillsTransaction", b =>
                {
                    b.HasOne("ProjectManagementTracketAPI.Models.SkillsMaster", "SkillsMaster")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
